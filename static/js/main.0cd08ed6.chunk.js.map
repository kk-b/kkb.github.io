{"version":3,"sources":["dogg.png","Home.js","About.js","Projects.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","steps","loop","wrapper","href","class","About","src","dog","alt","Projects","navBar","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,kC,8LCkC5BC,MA5Bf,WACE,OACE,8BACE,yBAAKC,UAAU,SACb,4BAAQA,UAAU,gBAChB,2BACE,gDACA,8BAAM,kBAAC,IAAD,CAASC,MAAS,CAAC,sBAAuB,IAAM,qCAAsCC,KAAM,EAAGC,QAAQ,OAC7G,yBAAKH,UAAU,UACb,4BACE,4BACE,uBAAGI,KAAM,gDAA+C,uBAAGC,MAAM,yBAEnE,4BACE,uBAAGD,KAAM,2BAA0B,uBAAGC,MAAM,oBAE9C,4BACE,uBAAGA,MAAM,4B,iBCLZC,MAbf,WACE,OACE,yBAAKN,UAAU,SACb,4BAAQA,UAAU,gBAChB,yBAAKO,IAAKC,IAAKR,UAAU,WAAWS,IAAI,SACxC,2BACE,6DCOKC,MAbf,WACE,OACE,yBAAKV,UAAU,SACb,4BAAQA,UAAU,gBAChB,yBAAKO,IAAKC,IAAKR,UAAU,WAAWS,IAAI,SACxC,2BACE,gECMKE,MAZf,WACE,OACI,yBAAKX,UAAU,SACb,4BAAQA,UAAU,gBAChB,2BACE,4CCeGY,MAZf,WACE,OACE,yBAAKZ,UAAU,OACb,iCACA,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAO,IAAIC,UAAWhB,IACnC,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAO,SAASC,UAAWT,IACxC,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAO,YAAYC,UAAWL,IAC3C,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAO,OAAOC,UAAWJ,MCRxBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.0cd08ed6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dogg.61a419b4.png\";","import React from 'react';\nimport './App.css';\nimport './theme.css';\nimport Typical from 'react-typical';\n\n\nfunction Home() {\n  return (\n    <body>\n      <div className=\"basic\">\n        <header className=\"basic-header\">\n          <p>\n            <h1>kyle khuong-bui.</h1>\n            <code><Typical steps = {['welcome to my page.', 2000, 'this is a work in progress... :DD']} loop={1} wrapper=\"p\"/></code>\n            <div className=\"social\">\n              <ul>\n                <li>\n                  <a href =\"https://www.linkedin.com/in/kyle-khuong-bui/\"><i class=\"fab fa-linkedin-in\" ></i></a>\n                </li>\n                <li>\n                  <a href =\"https://github.com/kk-b\"><i class=\"fab fa-github\"></i></a>\n                </li>\n                <li>\n                  <i class=\"fas fa-envelope\"></i>\n                </li>\n              </ul>\n            </div>\n          </p>\n        </header>\n      </div>\n    </body>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport dog from './dogg.png';\nimport './theme.css';\n\n\nfunction About() {\n  return (\n    <div className=\"basic\">\n      <header className=\"basic-header\">\n        <img src={dog} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          <h1>welcome to my about page.</h1>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport dog from './dogg.png';\nimport './theme.css';\n\n\nfunction Projects() {\n  return (\n    <div className=\"basic\">\n      <header className=\"basic-header\">\n        <img src={dog} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          <h1>welcome to my projects page.</h1>\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default Projects;\n","import React from 'react';\n// import {Link} from 'react-router-dom';\nimport './App.css';\nimport './theme.css';\n\nfunction navBar(){\n  return (\n      <div className=\"basic\">\n        <header className=\"basic-header\">\n          <p>\n            <h1>plz work</h1>\n          </p>\n        </header>\n      </div>\n  );\n}\n\nexport default navBar;","import React from 'react';\n\nimport {Route, Link} from 'react-router-dom';\n\nimport Home from './Home';\nimport About from './About';\nimport Projects from './Projects';\nimport navBar from './NavBar';\n\nimport './App.css';\nimport './theme.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <navBar />\n      <Route exact path = \"/\" component={Home}/>\n      <Route exact path = \"/about\" component={About}/>\n      <Route exact path = \"/projects\" component={Projects}/>\n      <Route exact path = \"/nav\" component={navBar}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}